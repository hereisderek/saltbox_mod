#########################################################################
# Title:            Sandbox: Restreamer                                 #
# Author(s):        Derek Z                                             #
# URL:              https://github.com/saltyorg/Sandbox                 #
# URL:              https://github.com/datarhei/restreamer              #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Basics
################################

restreamer_name: restreamer

################################
# Paths
################################

restreamer_paths_folder: "{{ restreamer_name }}"
restreamer_paths_location: "{{ server_appdata_path }}/{{ restreamer_paths_folder }}"
restreamer_paths_folders_list:
  - "{{ restreamer_paths_location }}"
  - "{{ restreamer_paths_location }}/config"
  - "{{ restreamer_paths_location }}/data"

################################
# Web
################################

restreamer_web_subdomain: "{{ restreamer_name }}"
restreamer_web_domain: "{{ user.domain }}"
restreamer_web_port: "8080"
restreamer_web_url: "{{ 'https://' + restreamer_web_subdomain + '.' + restreamer_web_domain
                     if (reverse_proxy_is_enabled)
                     else 'http://localhost:' + restreamer_web_port }}"

################################
# DNS
################################

restreamer_dns_record: "{{ restreamer_web_subdomain }}"
restreamer_dns_zone: "{{ restreamer_web_domain }}"
restreamer_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

# restreamer_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
# restreamer_traefik_middleware_default: "{{ traefik_default_middleware + ','
#                                           + lookup('vars', restreamer_name + '_traefik_sso_middleware', default=restreamer_traefik_sso_middleware)
#                                        if (lookup('vars', restreamer_name + '_traefik_sso_middleware', default=restreamer_traefik_sso_middleware) | length > 0)
#                                        else traefik_default_middleware }}"
# restreamer_traefik_middleware_custom: ""
# restreamer_traefik_middleware: "{{ restreamer_traefik_middleware_default + ','
#                                   + restreamer_traefik_middleware_custom
#                                if (not restreamer_traefik_middleware_custom.startswith(',') and restreamer_traefik_middleware_custom | length > 0)
#                                else restreamer_traefik_middleware_default
#                                   + restreamer_traefik_middleware_custom }}"

restreamer_traefik_certresolver: "{{ traefik_default_certresolver }}"
restreamer_traefik_enabled: true
restreamer_traefik_api_enabled: true
restreamer_traefik_api_endpoint: "`/api`,`/ui`"

################################
# Docker
################################

# Container
restreamer_docker_container: "{{ restreamer_name }}"

# Image
restreamer_docker_image_pull: true
restreamer_docker_image_tag: "latest"
restreamer_docker_image: "datarhei/restreamer:{{ restreamer_docker_image_tag }}"

# Ports
qbittorrentvpn_docker_ports_56881: "{{ port_lookup_56881.port
                                    if (port_lookup_56881.port is defined)
                                       and (port_lookup_56881.port | trim | length > 0)
                                    else '56881' }}"
qbittorrentvpn_web_port_lookup: "{{ lookup('vars', qbittorrentvpn_name + '_web_port', default=qbittorrentvpn_web_port) }}"

restreamer_docker_ports_1935: "1935"  # RTMP #1
restreamer_docker_ports_1936: "1936"  # RTMP #2
restreamer_docker_ports_6000: "6000"  # SRT

restreamer_docker_ports_defaults:
  - "{{ restreamer_docker_ports_1935 }}:1935"
  - "{{ restreamer_docker_ports_1936 }}:1936"
  - "{{ restreamer_docker_ports_6000 }}:6000/udp"
restreamer_docker_ports_custom: []
restreamer_docker_ports: "{{ restreamer_docker_ports_defaults
                             + restreamer_docker_ports_custom
                          if (not reverse_proxy_is_enabled)
                          else restreamer_docker_ports_custom }}"

# Envs
restreamer_docker_envs_default:
  TZ: "{{ tz }}"
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
restreamer_docker_envs_custom: {}
restreamer_docker_envs: "{{ restreamer_docker_envs_default
                            | combine(restreamer_docker_envs_custom) }}"

# Commands
restreamer_docker_commands_default: []
restreamer_docker_commands_custom: []
restreamer_docker_commands: "{{ restreamer_docker_commands_default
                                + restreamer_docker_commands_custom }}"

# Volumes
restreamer_docker_volumes_default:
  - "{{ restreamer_paths_location }}/config:/core/config"
restreamer_docker_volumes_custom: 
  - "{{ restreamer_paths_location }}/data:/core/data"
  
restreamer_docker_volumes: "{{ restreamer_docker_volumes_default
                               + restreamer_docker_volumes_custom }}"

# Devices
restreamer_docker_devices_default: []
restreamer_docker_devices_custom: []
restreamer_docker_devices: "{{ restreamer_docker_devices_default
                               + restreamer_docker_devices_custom }}"

# Hosts
restreamer_docker_hosts_default: []
restreamer_docker_hosts_custom: []
restreamer_docker_hosts: "{{ docker_hosts_common
                             | combine(restreamer_docker_hosts_default)
                             | combine(restreamer_docker_hosts_custom) }}"

# Labels
restreamer_docker_labels_default: 
  - '{ "traefik.http.routers.{{ restreamer_name }}-http.rule": "Host(`{{ traefik_host }}`) && PathPrefix(`/ui`)" }'
  - '{ "traefik.http.routers.{{ restreamer_name }}.rule": "Host(`{{ traefik_host }}`) && PathPrefix(`/ui`)" }'
  - '{ "traefik.http.routers.{{ restreamer_name }}-http.middlewares.stripprefix.prefixes": "/ui" }'
  - '{ "traefik.http.routers.{{ restreamer_name }}-http.middlewares.stripprefix.forceSlash": "false" }'
restreamer_docker_labels_custom: {}
restreamer_docker_labels: "{{ docker_labels_common
                              | combine(restreamer_docker_labels_default)
                              | combine(restreamer_docker_labels_custom) }}"

# Hostname
restreamer_docker_hostname: "{{ restreamer_name }}"

# Networks
restreamer_docker_networks_alias: "{{ restreamer_name }}"
restreamer_docker_networks_default: []
restreamer_docker_networks_custom: []
restreamer_docker_networks: "{{ docker_networks_common
                                + restreamer_docker_networks_default
                                + restreamer_docker_networks_custom }}"

# Capabilities
restreamer_docker_capabilities_default: []
restreamer_docker_capabilities_custom: []
restreamer_docker_capabilities: "{{ restreamer_docker_capabilities_default
                                    + restreamer_docker_capabilities_custom }}"

# Security Opts
restreamer_docker_security_opts_default: []
restreamer_docker_security_opts_custom: []
restreamer_docker_security_opts: "{{ restreamer_docker_security_opts_default
                                     + restreamer_docker_security_opts_custom }}"

# Restart Policy
restreamer_docker_restart_policy: unless-stopped

# State
restreamer_docker_state: started
